#!/usr/bin/env sh
yabai -m config status_bar                   on

# the scripting-addition must be loaded manually if
# you are running yabai on macOS Big Sur. Uncomment
# the following line to have the injection performed
# when the config is executed during startup.
#
# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)
#
# sudo yabai --load-sa
# yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
# My custom space names for my 3 monitor setup. These names are used in some of my scripts.
yabai -m space 1 --label one
yabai -m space 2 --label two
yabai -m space 3 --label three
yabai -m space 4 --label four
yabai -m space 5 --label five
yabai -m space 6 --label six
yabai -m space 9 --label nine


# float system preferences| makes yabai ignore some stuff
yabai -m rule --add app="^Spotify$" manage=off
yabai -m rule --add app="^System Preferences$" sticky=on layer=above manage=off
yabai -m rule --add app="^Karabiner-Elements$" sticky=on layer=above manage=off
yabai -m rule --add app="^Karabiner-EventViewer$" sticky=on layer=above manage=off
yabai -m rule --add app="^Finder$" sticky=on layer=above manage=off
yabai -m rule --add app="^Preview$" sticky=on layer=above manage=off
yabai -m rule --add app="^Koodo Reader" sticky=on layer=above manage=off
yabai -m rule --add app="^Microsoft Word" sticky=on layer=above manage=off
yabai -m rule --add app="^VLC" sticky=on layer=above manage=off
yabai -m rule --add app="^Spek" sticky=on layer=above manage=off
yabai -m rule --add app="^Archive Utility" sticky=on layer=above manage=off
yabai -m rule --add app="^GIMP-2.10" sticky=on layer=above manage=off
yabai -m rule --add app="^Ibooks" sticky=on layer=above manage=off
yabai -m rule --add app="^Acrobat Reader" sticky=on layer=above manage=off
yabai -m rule --add app="^calibre" sticky=on layer=above manage=off


# global settings
yabai -m config mouse_follows_focus          off
yabai -m config focus_follows_mouse          off
yabai -m config window_placement             second_child
yabai -m config window_topmost               off
#yabai -m config window_shadow off
yabai -m config window_shadow float
yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.0
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.80
yabai -m config window_border                off
yabai -m config window_border_width          6
yabai -m config active_window_border_color   0xff775759
yabai -m config normal_window_border_color   0xff555555
yabai -m config insert_feedback_color        0xffd75f5f
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off
yabai -m config mouse_modifier               fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
yabai -m config mouse_drop_action            swap

# general space settings
yabai -m config layout                       bsp
#yabai -m config top_padding                  10
#yabai -m config bottom_padding               42
yabai -m config left_padding                 13
yabai -m config right_padding                13
yabai -m config window_gap                   10
# if status bar is on the bottom then the value should be 50
yabai -m config external_bar main:45:10

#Limelight addon (Kill it and start it each time Yabai starts)
killall limelight &>/dev/null
limelight &>/dev/null &

#nibar config for auto window and space refresh
yabai -m signal --add event=space_changed \
    action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"nibar-spaces-jsx\"'" # if using multple displays, add an additional rule for "display_changed" event yabai -m signal --add event=display_changed \ action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"nibar-spaces-jsx\"'" add these rules to auto-update the "windows" widget
yabai -m signal --add event=window_focused \
    action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"nibar-windows-jsx\"'"
yabai -m signal --add event=window_destroyed \
    action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"nibar-windows-jsx\"'"
yabai -m signal --add event=window_created \
    action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"nibar-windows-jsx\"'"
yabai -m signal --add event=space_changed \
    action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"nibar-windows-jsx\"'"

echo "yabai configuration loaded.. mybro"

